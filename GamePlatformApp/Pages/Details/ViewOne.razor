@page "/game/{Id:int}"
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<PageTitle>View Game Details</PageTitle>

<div class="text-center mb-3 mt-3">
    <h1>@OneGame?.Name</h1>
    <p>@OneGame?.ReleasedDate</p>
</div>

@if (OneGame == null)
{
    <h2>Loading....</h2>
}
else
{
    <div class="image-container" style="@ImageContainerStyle">
        <div class="container div-container text-center">
            <div>
                <h5>@OneGame.Description</h5>
                <div class="d-flex justify-content-around mb-3 mt-3">
                    <div>
                        <h4 style="color: rgb(209, 151, 231);">Genres:</h4>
                        @foreach (var genre in OneGame.Genre)
                        {
                            <p style="display: inline-block;" class="me-3">@genre.Name</p>
                        }
                    </div>
                    <div>
                        <h4 style="color: rgb(209, 151, 231);">Platforms:</h4>
                        @foreach (var p in OneGame.Platforms)
                        {
                            <p style="display: inline-block;" class="me-3">@p.Platform.Name</p>
                        }
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-around">
                @foreach (var i in Screenshots.Screenshot)
                {
                    <a href="@i.Image" data-lightbox="screenshots" data-title="Screenshot" target="_blank">
                        <img class="sc-image me-4" src="@i.Image" alt="screenshots-of-displayed-game">
                    </a>
                }
            </div>
            <p class="mt-4 fs-5"><a href="@OneGame.Website" target="_blank">@OneGame.Website</a></p>
        </div>
    </div>
}

@code {
    private Games? Game = null;

    private bool showScrollButton = false;

    private Game? OneGame;

    private GameScreenshot? Screenshots = null;

    [Parameter]
    public int Id { get; set; }
    private string ImageContainerStyle => $"background-image: url('{OneGame?.Image}');";


    protected override async Task OnInitializedAsync()
    {

        var res = await
        Http.GetAsync($"https://api.rawg.io/api/games/{Id}?key=9cdb4d324c4a4643bb3d48d32b5884b2");
        if (res.IsSuccessStatusCode)
        {
            OneGame = await res.Content.ReadFromJsonAsync<Game>();
        }
        else
        {
            OneGame = null;
        }

        var response = await
        Http.GetAsync($"https://api.rawg.io/api/games/{Id}/screenshots?key=9cdb4d324c4a4643bb3d48d32b5884b2");
        if (response.IsSuccessStatusCode)
        {
            Screenshots = await response.Content.ReadFromJsonAsync<GameScreenshot>();
        }
        else
        {
            Screenshots = null;
        }

    }

    private async void ScrollToTop()
    {
        await JsRuntime.InvokeVoidAsync("OnScrollEvent");
    }
}